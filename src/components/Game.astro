<game-canvas>
    <canvas></canvas>
</game-canvas>

<style>
    game-canvas,
    canvas {
        display: block;
        margin: 0;
        width: 100%;
        height: 100%;
    }
</style>

<script>
    import { LoadWebGLContext, RunDemoAnimation } from '../scripts/main';

    // Define the behaviour for our new type of HTML element.
    class AstroHeart extends HTMLElement {
        connectedCallback() {
            const canvas = this.querySelector('canvas');

            if (canvas === null) {
                console.error('Unable to load the canvas');
                return;
            }

            console.log('Canvas successfully loaded');
            canvas.style.backgroundColor = '#0078D4';
            canvas.style.position = 'fixed';

            const gl = LoadWebGLContext(canvas);

            RunDemoAnimation(canvas, gl);
        }
    }

    // Tell the browser to use our AstroHeart class for <game-canvas> elements.
    customElements.define('game-canvas', AstroHeart);
</script>
