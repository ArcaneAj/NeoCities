<game-canvas>
    <canvas></canvas>
</game-canvas>

<style>
    game-canvas,
    canvas {
        display: block;
        margin: 0;
        width: 100%;
        height: 100%;
    }
</style>

<script>
    import { JumpGame } from '../scripts/jumpgame';
    import {
        Gravity,
        LoadWebGLContext,
        MovableSquare,
        OcclusionCulling,
        SwipableSquare,
    } from '../scripts/main';

    // Define the behaviour for our new type of HTML element.
    class AstroHeart extends HTMLElement {
        connectedCallback() {
            const canvas = this.querySelector('canvas');

            if (canvas === null) {
                console.error('Unable to load the canvas');
                return;
            }

            // focus the canvas
            canvas.setAttribute('tabindex', '0');
            canvas.focus();

            console.log('Canvas successfully loaded');
            canvas.style.backgroundColor = '#000000';
            canvas.style.position = 'fixed';

            const gl = LoadWebGLContext(canvas);

            // Check if the user is accessing the page on a mobile device
            var isMobile =
                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
                    navigator.userAgent
                );

            if (isMobile) {
                // User is accessing the page on a mobile device
                SwipableSquare(canvas, gl);
            } else {
                // User is accessing the page on a desktop device
                JumpGame(canvas, gl);
            }
        }
    }

    // Tell the browser to use our AstroHeart class for <game-canvas> elements.
    customElements.define('game-canvas', AstroHeart);
</script>
